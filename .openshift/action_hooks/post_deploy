#!/bin/bash
# This deploy hook gets executed after dependencies are resolved and the
# build hook has been run but before the application has been started back
# up again.  This script gets executed directly, so it could be python, php,
# ruby, etc.

DRUPAL_SETTINGS=$OPENSHIFT_REPO_DIR/sites/default/settings.php

# check and set the symlink for files dir
if [ ! -d "$OPENSHIFT_REPO_DIR/sites/default/files" ]; then
    echo !!! files symlink does NOT exist - creating symlink...
    mkdir /var/lib/openshift/55047fb8fcf933e89a000093/app-root/runtime/repo/sites/default/files
    echo !!! created files directory - creating symlink...
    ln -s $OPENSHIFT_DATA_DIR/files /var/lib/openshift/55047fb8fcf933e89a000093/app-root/runtime/repo/sites/default/files
    echo !!! created symlink - setting permissions on directory...
    chmod -R 0755 $OPENSHIFT_DATA_DIR/files
    echo !!! permissions have been set on files directory
else
    echo !!! sites directory already exists - skipping symlink...
fi

# check and set the symlink for files dir
if [ ! -d "$OPENSHIFT_REPO_DIR/sites/default/private" ]; then
    echo !!! private symlink does NOT exist - creating symlink...
    mkdir $OPENSHIFT_REPO_DIRsites/default/private
    echo !!! created private directory - creating symlink...
    ln -s $OPENSHIFT_DATA_DIR/private $OPENSHIFT_REPO_DIRsites/default/private
    echo !!! created symlink - setting permissions on directory...
    chmod -R 0750 $OPENSHIFT_DATA_DIR/private
    echo !!! permissions have been set on private directory
else
    echo !!! sites directory already exists - skipping symlink...
fi

cp $OPENSHIFT_DATA_DIR/settings.php $DRUPAL_SETTINGS
echo !!! settings.php copied from data dir to repo root

#chmod -R 0755 $OPENSHIFT_REPO_DIR/sites/default
chmod 0400 $DRUPAL_SETTINGS
echo !!! perms set on sites default and settings file

cp $OPENSHIFT_DATA_DIR/.htaccess $OPENSHIFT_REPO_DIR/.htaccess
echo !!! htaccess copied from data dir to repo root



