#!/bin/bash
# This deploy hook gets executed after dependencies are resolved and the
# build hook has been run but before the application has been started back
# up again.  This script gets executed directly, so it could be python, php,
# ruby, etc.

DRUPAL_SETTINGS=$OPENSHIFT_REPO_DIR/sites/default/settings.php

# check and set the symlink for files dir
if [ ! -d "$OPENSHIFT_REPO_DIR/sites/default" ]; then
    echo !!! create files directory
    mkdir $OPENSHIFT_REPO_DIR/sites/default
    # mkdir $OPENSHIFT_REPO_DIR/sites/default/files
    echo !!! created files directory 

else
    echo !!! default directory already exists
fi

# check and set the symlink for files dir
if [ ! -d "$OPENSHIFT_REPO_DIR/sites/default/files" ]; then

    echo !!! creating symlink...

    ln -s $OPENSHIFT_DATA_DIR/files $OPENSHIFT_REPO_DIR/sites/default/files

    echo !!! created symlink - setting permissions on directory...

    chmod -R 0755 $OPENSHIFT_DATA_DIR/files

    echo !!! permissions have been set on files directory

else
    echo !!! sites directory already exists - skipping symlink...
fi

# check and set the symlink for private dir
if [ ! -d "$OPENSHIFT_REPO_DIR/sites/default/private" ]; then

    echo !!! creating symlink...

    ln -s $OPENSHIFT_DATA_DIR/private $OPENSHIFT_REPO_DIR/sites/default/private

    echo !!! created symlink - setting permissions on directory...

    chmod -R 0750 $OPENSHIFT_DATA_DIR/private

    echo !!! permissions have been set on private directory

else
    echo !!! private directory already exists - skipping symlink...
fi


chmod -R 0755 $OPENSHIFT_REPO_DIR/files
rm $DRUPAL_SETTINGS

cp $OPENSHIFT_DATA_DIR/settings.php $DRUPAL_SETTINGS
echo !!! settings.php removed and copied from data dir to repo

chmod -R 0755 $OPENSHIFT_REPO_DIR/sites/default
chmod 0400 $DRUPAL_SETTINGS
echo !!! perms set on sites default and settings file

cp $OPENSHIFT_DATA_DIR/.htaccess $OPENSHIFT_REPO_DIR/.htaccess
echo !!! htaccess copied from data dir to repo root